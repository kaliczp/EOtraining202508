* Bevezetés
Johannes presenter.
Elkéstem OTKA megbeszélés miatt.
Why Python?
packages:
- matplotlib
- cartopy
- plotly
- bokeh
Interactive maps
- folium
- ipyleflet
- geemap
aps
- dash
- panel
- streamlit

Strong community, academic orgs.
Lot of tutorials, notebooks shared data. Futureproof.

Ease to use and reproducibility
* Additional
Programing related.
Can be tricky to install. MSWin, linux, macos

Conda packaga manager recommended.

Miniforge package, hand install is OK, but lots of problems.

Advantages install non python dependencies R, QGIS, jupyter notebooks, PostGIS.

** Open Source & Standards - Organisations
- OSGeo
- OGC
Why? interoperability integration alignment with OpenSource community.
As a community we can go further. You can benefit other peaple work.

** Sustaniable coding
- git
- pytest
- conda-forge
- cookiecutter
- pytho package index

code writing, after half year not benefit.

sustainable coding
FAIR software

- F :: indability
- A :: ccessibility
- I :: nteroperability
- R :: eusability

How to do that use ~git~ notebook is fine.
- version control
- stb.

- Docomentation is key. Is teh code but also for external users.
- formatting numpydoc
- meaningful variable/function/class names
- create unittests from beginning use CI/CD pipeline to test you code.
Everyone go github. It helps a lot an if you change your code. Take the time and use unittest.


* Hands-on programming setup
https://nextcloud.gfz.de/s/Yg5A2Y69WpemkfL

https://tinyurl.com/29r58zum

Starting miniforge prompt után, amit előzetesen felraktak a gépekre.

#+begin_src python
mamba activate eo_python
jupyter lab
#+end_src

~localhost:8888/lab~ volt a prompt, ahol megnyílt az oldal.

EO in python - most valuable packages.ipynb indítottuk.

** Gyakorlathoz
shapely's class polygon

Presentation változtat.

* Jupiter notebook
python in the background, and installad packages in the background.

Small instruction. Solutions includes. Can be tray at home.

Shift + ENTER next line

We try to program. ChatGPT is also an option. Try to find
the solution. Fertős polygon.

google megnyitás és koordinátok

Function and method Coordinate to correct order!

sudo apt -y install python3-shapely
#+begin_src python
  from shapely.geometry import Polygon
  CoordSopron = [(16.52,47.72),(16.714,47.72),(16.714,47.63),(16.52,47.63)]
  SopronPoly = Polygon(CoordSopron)
  SopronPoly

  import matplotlib.pyplot as plt
  x,y = SopronPoly.exterior.xy
  plt.plot(x,y)
  plt.show()
#+end_src

* Georeferencing saving polygon
Georeferencing and geodetic, geographic coordinates.

shapely only a polygon, not meet with earth

Geopandas manages it.
#+begin_src sh
sudo apt -y install python3-geopandas
#+end_src

Use https://epsg.io csak az országnévre is ad találatot.

UTM we will use, because satellite data came from.

Calculate are in m^2 with geographic coordinate not possible.

#+begin_src python
  SopronPoly.area
  # makes calculation but lat/lon.

  import geopandas as gpd
  geodataframe_sopron_geographic = gpd.GeoDataFrame(index=[0], crs='epsg:4326', geometry=SopronPoly)
  geodataframe_sopron_geographic.crs
  geodataframe_sopron_geographic.to_file('output/sopron_polygon.geojson', driver='GeoJSON')
#+end_src
index indicates, 0 wich enty has the polygon! First vector.

#+begin_src python
  import matplotlib.pyplot as plt
  from geodatasets import get_path
  geodataframe_world = gpd.read_fiel(get_path("naturalearth.land"))
  ax =geodataframe_world.clip([-5,37,27,55])
  # itt lemaradtam
#+end_src

Miniforge meg tudja nyitni a QGISt.

#+begin_src python
  gdf_sopron_geodetic = geodataframe_sopron_geographic.to_crs(32633)
  gdf_sopron_geodetic.crs
  area_sorpon_sqm = gdf_sopron_geodetic.are[0]
  print(f"Theare is{round(are_sorpn_sqm/1000000,6)}km+2")
  gdf_sopron_geodetic.to_file('output/sopron_polygon2.geojson', driver='GeoJSON')
#+end_src
We flattended the globe!

* Excercise2 Raster
More complicated.

** B
RGB used. SWIR

We have 2 band in different m

Stacking one band one 2D planar raster. Same resolutions need. Resample

Resampling needs allways. Consistently correct!
Reproject! Change. Warning!

Same amount pixels. Upscale facotor 2 to increase 10 m!

Inputban a raster!

Several steps.

#+begin_src python
for output_filename zip togetner
with rasterio.open(file) as dataset:
#+end_src
It closes the dataset!
Store metadata!

transform affine to make something!

rasterio whole file in memory, dataset.read numpy array.
Just an array! Ordinary numpy can be use data variables.

upscale_factor 2!

~Resample.cubic~ cubic method nearestneighbor also possible
Lots of method availabe. ~cubic~ best one.

20*20 m pixel are split to four pixels.

How change pixel values?

transrom.scale

Use the shape!

20 pixel to 10 m pixel.

Last step.

"w" writing mode, new file is created.

Save 10 m resampled file.

** Stack all the bands

10m files!

next block
open files 10m and put an array.

Stacking there are lots of probabilities.
Band sequential.

Update metadada. Need remember raster ido
Save stack.

* Clipping raster data
Read vector and save it.

~getFeatrues~ function

First argument dataframe. to_json file type.

Beolvastuk a geodetic koordinátás fájlt. Csak a koordinátákat.

We nade update first the metadata.

mask from rasterio! sorce ~src~ second argument coordinates
crop = TRUE if not keep the same region as the full but with nodata!

update function get all the things.

* s2Downloadere
Try out at home!

Python who have problem, creates a package to solve it!

Az s2Downloaderes 4 blokkon magyarázunk. Majd megnézzük.

* Satellite imagery processing
** NDVI
Standard calculation. Write a function.

ignore divison with 0 it is not real math.

We return at the end.

Bands in geodataframe. We read it the neccessary number and store
a 32 bit float instead 16 bit to make more accurate.

A numpy import elmaradt
import numpy as np

Plot generation. Only a basic plot. Colorbar at the right side.
Accuracy depends on imagery used.

litre trick. np.where makes a raster calculation.

** NDWI
Calculate the NDWI.

Lake with floating plants. Treshold is modified! You can modified. What you see
is important.

* Interactive map
import folium above other packages.

arcgisonlie server get map!!!!

We use geometry again here we use geometry here.

More complicated to add raster.

Visualisation outside our GIS system.

RGB composit with folium.

Webmap works in WGS84 google has some work.

We cat some percentile from top and bottom. Berakjuk a rasztert, hogy
folium tudja olvasni. RGB értékre taranszformálás.

Csak betölti és nem változtat semmit a fájlon.

A megfelelő sorrendbe kell rakni a hullámhosszok szerint az
RGB-hez. Rearranged numpy stack.

profile update again.

RGB there is no nodata. 0 to all everything black.

CLI GDAL is used. Workhorse every IO based software. ~gdalwarp~

miniforge is called conversion outside with gdalwarp
mamba activate eo_python
gdalwarp
